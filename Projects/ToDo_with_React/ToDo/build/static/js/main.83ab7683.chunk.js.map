{"version":3,"sources":["components/Add.js","components/Todolist.js","App.js","index.js"],"names":["Add","props","handleChange","e","setState","target","name","value","handleClick","state","itemname","alert","addfunc","reset","className","type","placeholder","this","onChange","onClick","React","Component","Todolist","disp","label","data","map","element","key","id","handleDone","style","color","isdone","textDecoration","task","handleDel","App","formSubmit","item","uuid","tododata","isdata","performDone","performDel","filter","showcompleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83ab7683.chunk.js","sourcesContent":["import React from 'react'\nclass Add extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            itemname:''\n        }\n    }\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    handleClick=()=>{\n        if(this.state.itemname===\"\"){\n            alert('Please Fill the Input!')\n        } \n        else{\n            this.props.addfunc(this.state.itemname)\n        }\n        this.reset()\n    }\n\n    reset=()=>{\n        this.setState({\n            itemname:''\n        })\n    }\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row my-5 text-center\">\n                    <div className=\"col-10 offset-1 offset-md-0 col-md-6 col-lg-4 offset-lg-4 d-flex\">\n                        <input type=\"text\" className=\"form-control mr-2\" placeholder=\"Add a Todo Item\" value={this.state.itemname} onChange={this.handleChange} name=\"itemname\"/>\n                        <button className=\"btn btn-primary\" onClick={this.handleClick}>ADD</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Add","import React from 'react'\nclass Todolist extends React.Component{\n    render(){\n        let disp=(this.props.label===\"Todo's\")?\"text-primary font-weight-bold\":\"text-success font-weight-bold\"\n        return(\n            <div className=\"text-center mx-4 mb-3\">\n                <h4 className={disp}><u>{this.props.label}</u></h4>\n                {this.props.data.map((element)=>\n                    <div className=\"row\" key={element.id}>\n                        <div className=\"col-12 col-md-8 col-lg-4 offset-lg-4\">\n                            <div className=\"card\">\n                                <div className=\"bg-warning d-flex py-1\">\n                                    <div className=\"col-md-4\">\n                                        <input type=\"checkbox\" onClick={()=>this.props.handleDone(element.id)} className=\"mt-2\"/>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <h5 style={{color:`${element.isdone?\"green\":\"black\"}`,\n                                        textDecoration:`${element.isdone?'line-through':''}`}}>{element.task}</h5>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <span className=\"text-dark\" onClick={()=>this.props.handleDel(element.id)}><i className=\"fas fa-trash-alt\"></i></span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\nexport default Todolist ","import React from 'react'\nimport uuid from 'react-uuid'\nimport Add from './components/Add'\nimport Todolist from './components/Todolist'\n\nclass App extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            tododata:[],\n            isdata:false,\n            showcompleted:false\n        }\n    }\n\n    formSubmit=(name)=>{\n        let item={\n            task:name,\n            isdone:false,\n            id:uuid()\n        }\n        this.setState({\n            tododata:[...this.state.tododata,item],\n            isdata:true\n        })\n    }\n\n    performDone=(id)=>{\n        this.setState({\n            tododata:this.state.tododata.map(element=>element.id===id?{...element,isdone:!element.isdone}:element)\n        })\n    }\n\n    performDel=(id)=>{\n        this.setState({\n            tododata:this.state.tododata.filter(element=>element.id!==id)\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"container border shadow-lg my-5\">\n                <h1 className=\"text-center mt-3 font-weight-bold text-\"><u>TO-DO APP</u></h1>\n                <Add addfunc={this.formSubmit}/>\n                {this.state.isdata && <Todolist data={this.state.tododata}\n                                                handleDone={this.performDone}\n                                                handleDel={this.performDel}\n                                                label=\"Todo's\"/>}\n            {this.state.isdata && <button onClick={()=>this.setState({showcompleted:!this.state.showcompleted})} className=\"btn btn-primary mt-4 mb-4 offset-3 offset-lg-5\">Show Completed Todo's</button>}\n                \n            {this.state.showcompleted && <Todolist data={this.state.tododata.filter(element=>element.isdone)}\n                                                    handleDone={this.performDone}\n                                                    handleDel={this.performDel}\n                                                    label=\"Completed Todo's\"/>}\n            </div>\n        )\n    }\n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter>\n                <App/>\n                </BrowserRouter>,\n                document.getElementById('root'))"],"sourceRoot":""}